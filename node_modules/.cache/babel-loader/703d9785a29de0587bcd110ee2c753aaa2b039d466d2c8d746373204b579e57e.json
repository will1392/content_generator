{"ast":null,"code":"var _jsxFileName = \"/Users/will/Content Creation App/src/App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { toast } from 'react-toastify';\nimport { Menu } from 'lucide-react';\nimport { supabase } from './services/supabase.service';\nimport { clientService } from './services/client.service';\nimport { AppLayout } from './components/layout/AppLayout';\nimport { ClientDashboard } from './components/client/ClientDashboard';\nimport { KeywordInput } from './components/stages/KeywordInput';\nimport { ResearchDisplay } from './components/stages/ResearchDisplay';\nimport { BlogDisplay } from './components/stages/BlogDisplay';\nimport { PodcastDisplay } from './components/stages/PodcastDisplay';\nimport { AudioPlayer } from './components/stages/AudioPlayer';\nimport { ImageGallery } from './components/stages/ImageGallery';\nimport { SocialCaptions } from './components/stages/SocialCaptions';\nimport { ContentSummary } from './components/final/ContentSummary';\nimport { useProject } from './hooks/useProject';\nimport { useClientProject } from './hooks/useClientProject';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    project,\n    currentStage,\n    isLoading,\n    error,\n    createProject,\n    updateStage,\n    getStageContent,\n    regenerateContent\n  } = useProject();\n  const {\n    selectedContent,\n    autoSave\n  } = useClientProject();\n  const [stageContent, setStageContent] = useState({});\n  const [showDashboard, setShowDashboard] = useState(true);\n  const [activeContent, setActiveContent] = useState(null);\n\n  // Test Supabase connection on component mount\n  useEffect(() => {\n    const testSupabaseConnection = async () => {\n      try {\n        console.log('Testing Supabase connection...');\n        const {\n          data,\n          error\n        } = await supabase.from('projects').select('*').limit(1);\n        console.log('Supabase test result:', {\n          data,\n          error\n        });\n        if (error) {\n          console.error('Supabase connection error:', error);\n        } else {\n          console.log('Supabase connected successfully');\n        }\n      } catch (err) {\n        console.error('Supabase test failed:', err);\n      }\n    };\n    testSupabaseConnection();\n  }, []);\n\n  // Handle content selection from dashboard\n  const handleContentSelected = useCallback(async contentId => {\n    try {\n      const content = await clientService.getProjectContent(contentId);\n      if (content) {\n        setActiveContent(content);\n        setShowDashboard(false);\n\n        // Load stage data\n        if (content.stage_data) {\n          setStageContent(content.stage_data);\n        }\n      }\n    } catch (err) {\n      console.error('Failed to load content:', err);\n      toast.error('Failed to load content');\n    }\n  }, []);\n\n  // Auto-save when content changes\n  const handleContentUpdate = useCallback(async (stage, data) => {\n    if (!activeContent) return;\n\n    // Update local state immediately\n    setStageContent(prev => ({\n      ...prev,\n      [stage]: data\n    }));\n\n    // Auto-save to database\n    await autoSave(stage, {\n      ...stageContent,\n      [stage]: data\n    });\n  }, [activeContent, stageContent, autoSave]);\n  const loadAllStageContent = useCallback(async () => {\n    if (!(project !== null && project !== void 0 && project.id)) return;\n    const stages = ['research', 'blog', 'podcast_script', 'audio', 'images', 'social'];\n    const content = {};\n    for (const stage of stages) {\n      const data = await getStageContent(project.id, stage);\n      if (data) {\n        content[stage] = data;\n      }\n    }\n    setStageContent(content);\n  }, [project === null || project === void 0 ? void 0 : project.id, getStageContent]);\n  useEffect(() => {\n    if (project !== null && project !== void 0 && project.id) {\n      loadAllStageContent();\n    }\n  }, [project === null || project === void 0 ? void 0 : project.id, loadAllStageContent]);\n  const handleKeywordSubmit = async keyword => {\n    if (activeContent) {\n      // If we have an active content from client dashboard, use that\n      await handleGenerateResearch(activeContent.id, keyword);\n    } else {\n      // Legacy flow - create a project directly\n      const newProject = await createProject(keyword);\n      if (newProject) {\n        await handleGenerateResearch(newProject.id, keyword);\n      }\n    }\n  };\n  const handleGenerateResearch = async (contentId, keyword) => {\n    const timeoutId = setTimeout(() => {\n      console.warn('Research is taking longer than expected... Still processing...');\n    }, 15000);\n    try {\n      const research = await regenerateContent(contentId, 'research', {\n        keyword\n      });\n      clearTimeout(timeoutId);\n      if (research) {\n        await handleContentUpdate('research', research);\n      }\n    } catch (error) {\n      clearTimeout(timeoutId);\n      throw error;\n    }\n  };\n  const handleGenerateBlog = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId || !stageContent.research) {\n      console.error('Missing required data for blog generation');\n      return;\n    }\n    try {\n      const blog = await regenerateContent(projectId, 'blog', {\n        keyword: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword),\n        research: stageContent.research\n      });\n      if (blog) {\n        await handleContentUpdate('blog', blog);\n        await updateStage(projectId, 'blog');\n      }\n    } catch (error) {\n      console.error('Blog generation error:', error);\n    }\n  };\n  const handleGeneratePodcast = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId || !stageContent.blog) return;\n    const podcast = await regenerateContent(projectId, 'podcast_script', {\n      keyword: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword),\n      blog: stageContent.blog\n    });\n    if (podcast) {\n      await handleContentUpdate('podcast_script', podcast);\n      await updateStage(projectId, 'podcast_script');\n    }\n  };\n  const handleGenerateAudio = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId || !stageContent.podcast_script) return;\n    const audio = await regenerateContent(projectId, 'audio', {\n      keyword: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword),\n      podcastScript: stageContent.podcast_script\n    });\n    if (audio) {\n      await handleContentUpdate('audio', audio);\n      await updateStage(projectId, 'audio');\n    }\n  };\n  const handleGenerateImages = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId || !stageContent.blog) return;\n    const images = await regenerateContent(projectId, 'images', {\n      keyword: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword),\n      content: stageContent.blog\n    });\n    if (images) {\n      await handleContentUpdate('images', images);\n      await updateStage(projectId, 'images');\n    }\n  };\n  const handleGenerateSocial = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId || !stageContent.blog) return;\n    const social = await regenerateContent(projectId, 'social', {\n      keyword: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword),\n      content: stageContent.blog\n    });\n    if (social) {\n      await handleContentUpdate('social', social);\n      await updateStage(projectId, 'social');\n    }\n  };\n  const handleCompleteProject = async () => {\n    const projectId = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id);\n    if (!projectId) return;\n    await updateStage(projectId, 'complete');\n  };\n  const getCurrentStage = () => {\n    if (activeContent) {\n      return activeContent.stage;\n    }\n    return currentStage;\n  };\n  const renderCurrentStage = () => {\n    const stage = getCurrentStage();\n    const keyword = (activeContent === null || activeContent === void 0 ? void 0 : activeContent.keyword) || (project === null || project === void 0 ? void 0 : project.keyword);\n    if (!keyword && !activeContent) {\n      return /*#__PURE__*/_jsxDEV(KeywordInput, {\n        onSubmit: handleKeywordSubmit,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 14\n      }, this);\n    }\n    switch (stage) {\n      case 'research':\n        return /*#__PURE__*/_jsxDEV(ResearchDisplay, {\n          research: stageContent.research,\n          isLoading: isLoading,\n          onRegenerate: () => handleGenerateResearch((activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || (project === null || project === void 0 ? void 0 : project.id) || '', keyword || ''),\n          onContinue: handleGenerateBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n      case 'blog':\n        return /*#__PURE__*/_jsxDEV(BlogDisplay, {\n          blog: stageContent.blog,\n          isLoading: isLoading,\n          onRegenerate: handleGenerateBlog,\n          onContinue: handleGeneratePodcast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this);\n      case 'podcast_script':\n        return /*#__PURE__*/_jsxDEV(PodcastDisplay, {\n          podcast: stageContent.podcast_script,\n          isLoading: isLoading,\n          onRegenerate: handleGeneratePodcast,\n          onContinue: handleGenerateAudio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this);\n      case 'audio':\n        return /*#__PURE__*/_jsxDEV(AudioPlayer, {\n          audio: stageContent.audio,\n          isLoading: isLoading,\n          onRegenerate: handleGenerateAudio,\n          onContinue: handleGenerateImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this);\n      case 'images':\n        return /*#__PURE__*/_jsxDEV(ImageGallery, {\n          images: stageContent.images,\n          isLoading: isLoading,\n          onRegenerate: handleGenerateImages,\n          onContinue: handleGenerateSocial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this);\n      case 'social':\n        return /*#__PURE__*/_jsxDEV(SocialCaptions, {\n          social: stageContent.social,\n          isLoading: isLoading,\n          onRegenerate: handleGenerateSocial,\n          onContinue: handleCompleteProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this);\n      case 'complete':\n        return /*#__PURE__*/_jsxDEV(ContentSummary, {\n          project: project || {\n            id: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.id) || '',\n            keyword: keyword || '',\n            status: 'complete',\n            created_at: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.created_at) || '',\n            updated_at: (activeContent === null || activeContent === void 0 ? void 0 : activeContent.updated_at) || ''\n          },\n          onNewProject: () => {\n            setShowDashboard(true);\n            setActiveContent(null);\n            setStageContent({});\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Unknown stage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  if (showDashboard) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ClientDashboard, {\n        onContentSelected: handleContentSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"bottom-right\",\n        toastOptions: {\n          style: {\n            background: 'rgba(20, 20, 20, 0.9)',\n            color: '#fff',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.1)'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-950 bg-gradient-to-br from-gray-900 via-gray-950 to-[#1a0d3d]\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowDashboard(true),\n      className: \"fixed top-6 left-6 z-50 p-3 bg-white/10 backdrop-blur-xl rounded-xl border border-white/20 hover:bg-white/20 transition-all duration-200 group\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        className: \"w-5 h-5 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"absolute left-full ml-2 top-1/2 transform -translate-y-1/2 bg-black/80 text-white text-sm py-1 px-3 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      project: project || (activeContent ? {\n        id: activeContent.id,\n        keyword: activeContent.keyword,\n        status: activeContent.stage,\n        created_at: activeContent.created_at,\n        updated_at: activeContent.updated_at\n      } : null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 p-4 bg-red-500/10 backdrop-blur-xl border border-red-500/20 rounded-2xl text-red-400\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), activeContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 p-4 bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm\",\n            children: \"Working on:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white font-semibold\",\n            children: activeContent.content_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white/60 text-sm mt-1\",\n            children: [\"Keyword: \", activeContent.keyword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), renderCurrentStage()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"bottom-right\",\n      toastOptions: {\n        style: {\n          background: 'rgba(20, 20, 20, 0.9)',\n          color: '#fff',\n          backdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xi6lalb60PaDMUpbgpdyTBksWf4=\", false, function () {\n  return [useProject, useClientProject];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Toaster","toast","Menu","supabase","clientService","AppLayout","ClientDashboard","KeywordInput","ResearchDisplay","BlogDisplay","PodcastDisplay","AudioPlayer","ImageGallery","SocialCaptions","ContentSummary","useProject","useClientProject","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","project","currentStage","isLoading","error","createProject","updateStage","getStageContent","regenerateContent","selectedContent","autoSave","stageContent","setStageContent","showDashboard","setShowDashboard","activeContent","setActiveContent","testSupabaseConnection","console","log","data","from","select","limit","err","handleContentSelected","contentId","content","getProjectContent","stage_data","handleContentUpdate","stage","prev","loadAllStageContent","id","stages","handleKeywordSubmit","keyword","handleGenerateResearch","newProject","timeoutId","setTimeout","warn","research","clearTimeout","handleGenerateBlog","projectId","blog","handleGeneratePodcast","podcast","handleGenerateAudio","podcast_script","audio","podcastScript","handleGenerateImages","images","handleGenerateSocial","social","handleCompleteProject","getCurrentStage","renderCurrentStage","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onRegenerate","onContinue","status","created_at","updated_at","onNewProject","children","onContentSelected","position","toastOptions","style","background","color","backdropFilter","border","className","onClick","content_name","_c","$RefreshReg$"],"sources":["/Users/will/Content Creation App/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { toast } from 'react-toastify';\nimport { Menu } from 'lucide-react';\nimport { supabase } from './services/supabase.service';\nimport { clientService } from './services/client.service';\nimport { AppLayout } from './components/layout/AppLayout';\nimport { ClientDashboard } from './components/client/ClientDashboard';\nimport { KeywordInput } from './components/stages/KeywordInput';\nimport { ResearchDisplay } from './components/stages/ResearchDisplay';\nimport { BlogDisplay } from './components/stages/BlogDisplay';\nimport { PodcastDisplay } from './components/stages/PodcastDisplay';\nimport { AudioPlayer } from './components/stages/AudioPlayer';\nimport { ImageGallery } from './components/stages/ImageGallery';\nimport { SocialCaptions } from './components/stages/SocialCaptions';\nimport { ContentSummary } from './components/final/ContentSummary';\nimport { useProject } from './hooks/useProject';\nimport { useClientProject } from './hooks/useClientProject';\nimport { ProjectStage, ResearchContent } from './types/project.types';\nimport { ProjectContent } from './types/client.types';\n\nfunction App() {\n  const {\n    project,\n    currentStage,\n    isLoading,\n    error,\n    createProject,\n    updateStage,\n    getStageContent,\n    regenerateContent\n  } = useProject();\n\n  const {\n    selectedContent,\n    autoSave\n  } = useClientProject();\n\n  const [stageContent, setStageContent] = useState<Record<string, any>>({});\n  const [showDashboard, setShowDashboard] = useState(true);\n  const [activeContent, setActiveContent] = useState<ProjectContent | null>(null);\n\n  // Test Supabase connection on component mount\n  useEffect(() => {\n    const testSupabaseConnection = async () => {\n      try {\n        console.log('Testing Supabase connection...');\n        const { data, error } = await supabase.from('projects').select('*').limit(1);\n        console.log('Supabase test result:', { data, error });\n        \n        if (error) {\n          console.error('Supabase connection error:', error);\n        } else {\n          console.log('Supabase connected successfully');\n        }\n      } catch (err) {\n        console.error('Supabase test failed:', err);\n      }\n    };\n    \n    testSupabaseConnection();\n  }, []);\n\n  // Handle content selection from dashboard\n  const handleContentSelected = useCallback(async (contentId: string) => {\n    try {\n      const content = await clientService.getProjectContent(contentId);\n      if (content) {\n        setActiveContent(content);\n        setShowDashboard(false);\n        \n        // Load stage data\n        if (content.stage_data) {\n          setStageContent(content.stage_data);\n        }\n      }\n    } catch (err) {\n      console.error('Failed to load content:', err);\n      toast.error('Failed to load content');\n    }\n  }, []);\n\n  // Auto-save when content changes\n  const handleContentUpdate = useCallback(async (stage: ProjectStage, data: any) => {\n    if (!activeContent) return;\n\n    // Update local state immediately\n    setStageContent(prev => ({ ...prev, [stage]: data }));\n    \n    // Auto-save to database\n    await autoSave(stage, { ...stageContent, [stage]: data });\n  }, [activeContent, stageContent, autoSave]);\n\n  const loadAllStageContent = useCallback(async () => {\n    if (!project?.id) return;\n    \n    const stages: ProjectStage[] = [\n      'research', 'blog', 'podcast_script', \n      'audio', 'images', 'social'\n    ];\n    \n    const content: Record<string, any> = {};\n    \n    for (const stage of stages) {\n      const data = await getStageContent(project.id, stage);\n      if (data) {\n        content[stage] = data;\n      }\n    }\n    \n    setStageContent(content);\n  }, [project?.id, getStageContent]);\n\n  useEffect(() => {\n    if (project?.id) {\n      loadAllStageContent();\n    }\n  }, [project?.id, loadAllStageContent]);\n\n  const handleKeywordSubmit = async (keyword: string) => {\n    if (activeContent) {\n      // If we have an active content from client dashboard, use that\n      await handleGenerateResearch(activeContent.id, keyword);\n    } else {\n      // Legacy flow - create a project directly\n      const newProject = await createProject(keyword);\n      if (newProject) {\n        await handleGenerateResearch(newProject.id, keyword);\n      }\n    }\n  };\n\n  const handleGenerateResearch = async (contentId: string, keyword: string) => {\n    const timeoutId = setTimeout(() => {\n      console.warn('Research is taking longer than expected... Still processing...');\n    }, 15000);\n\n    try {\n      const research = await regenerateContent(contentId, 'research', { keyword });\n      clearTimeout(timeoutId);\n      \n      if (research) {\n        await handleContentUpdate('research', research);\n      }\n    } catch (error) {\n      clearTimeout(timeoutId);\n      throw error;\n    }\n  };\n\n  const handleGenerateBlog = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId || !stageContent.research) {\n      console.error('Missing required data for blog generation');\n      return;\n    }\n    \n    try {\n      const blog = await regenerateContent(projectId, 'blog', {\n        keyword: activeContent?.keyword || project?.keyword,\n        research: stageContent.research\n      });\n      \n      if (blog) {\n        await handleContentUpdate('blog', blog);\n        await updateStage(projectId, 'blog');\n      }\n    } catch (error) {\n      console.error('Blog generation error:', error);\n    }\n  };\n\n  const handleGeneratePodcast = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId || !stageContent.blog) return;\n    \n    const podcast = await regenerateContent(projectId, 'podcast_script', {\n      keyword: activeContent?.keyword || project?.keyword,\n      blog: stageContent.blog\n    });\n    \n    if (podcast) {\n      await handleContentUpdate('podcast_script', podcast);\n      await updateStage(projectId, 'podcast_script');\n    }\n  };\n\n  const handleGenerateAudio = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId || !stageContent.podcast_script) return;\n    \n    const audio = await regenerateContent(projectId, 'audio', {\n      keyword: activeContent?.keyword || project?.keyword,\n      podcastScript: stageContent.podcast_script\n    });\n    \n    if (audio) {\n      await handleContentUpdate('audio', audio);\n      await updateStage(projectId, 'audio');\n    }\n  };\n\n  const handleGenerateImages = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId || !stageContent.blog) return;\n    \n    const images = await regenerateContent(projectId, 'images', {\n      keyword: activeContent?.keyword || project?.keyword,\n      content: stageContent.blog\n    });\n    \n    if (images) {\n      await handleContentUpdate('images', images);\n      await updateStage(projectId, 'images');\n    }\n  };\n\n  const handleGenerateSocial = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId || !stageContent.blog) return;\n    \n    const social = await regenerateContent(projectId, 'social', {\n      keyword: activeContent?.keyword || project?.keyword,\n      content: stageContent.blog\n    });\n    \n    if (social) {\n      await handleContentUpdate('social', social);\n      await updateStage(projectId, 'social');\n    }\n  };\n\n  const handleCompleteProject = async () => {\n    const projectId = activeContent?.id || project?.id;\n    if (!projectId) return;\n    await updateStage(projectId, 'complete');\n  };\n\n  const getCurrentStage = () => {\n    if (activeContent) {\n      return activeContent.stage as ProjectStage;\n    }\n    return currentStage;\n  };\n\n  const renderCurrentStage = () => {\n    const stage = getCurrentStage();\n    const keyword = activeContent?.keyword || project?.keyword;\n\n    if (!keyword && !activeContent) {\n      return <KeywordInput onSubmit={handleKeywordSubmit} isLoading={isLoading} />;\n    }\n\n    switch (stage) {\n      case 'research':\n        return (\n          <ResearchDisplay\n            research={stageContent.research}\n            isLoading={isLoading}\n            onRegenerate={() => handleGenerateResearch(activeContent?.id || project?.id || '', keyword || '')}\n            onContinue={handleGenerateBlog}\n          />\n        );\n      \n      case 'blog':\n        return (\n          <BlogDisplay\n            blog={stageContent.blog}\n            isLoading={isLoading}\n            onRegenerate={handleGenerateBlog}\n            onContinue={handleGeneratePodcast}\n          />\n        );\n\n      case 'podcast_script':\n        return (\n          <PodcastDisplay\n            podcast={stageContent.podcast_script}\n            isLoading={isLoading}\n            onRegenerate={handleGeneratePodcast}\n            onContinue={handleGenerateAudio}\n          />\n        );\n\n      case 'audio':\n        return (\n          <AudioPlayer\n            audio={stageContent.audio}\n            isLoading={isLoading}\n            onRegenerate={handleGenerateAudio}\n            onContinue={handleGenerateImages}\n          />\n        );\n\n      case 'images':\n        return (\n          <ImageGallery\n            images={stageContent.images}\n            isLoading={isLoading}\n            onRegenerate={handleGenerateImages}\n            onContinue={handleGenerateSocial}\n          />\n        );\n\n      case 'social':\n        return (\n          <SocialCaptions\n            social={stageContent.social}\n            isLoading={isLoading}\n            onRegenerate={handleGenerateSocial}\n            onContinue={handleCompleteProject}\n          />\n        );\n\n      case 'complete':\n        return (\n          <ContentSummary\n            project={project || { \n              id: activeContent?.id || '', \n              keyword: keyword || '',\n              status: 'complete',\n              created_at: activeContent?.created_at || '',\n              updated_at: activeContent?.updated_at || ''\n            }}\n            onNewProject={() => {\n              setShowDashboard(true);\n              setActiveContent(null);\n              setStageContent({});\n            }}\n          />\n        );\n      \n      default:\n        return <div>Unknown stage</div>;\n    }\n  };\n\n  if (showDashboard) {\n    return (\n      <>\n        <ClientDashboard onContentSelected={handleContentSelected} />\n        <Toaster \n          position=\"bottom-right\"\n          toastOptions={{\n            style: {\n              background: 'rgba(20, 20, 20, 0.9)',\n              color: '#fff',\n              backdropFilter: 'blur(10px)',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n            },\n          }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-950 bg-gradient-to-br from-gray-900 via-gray-950 to-[#1a0d3d]\">\n      {/* Dashboard Toggle Button */}\n      <button\n        onClick={() => setShowDashboard(true)}\n        className=\"fixed top-6 left-6 z-50 p-3 bg-white/10 backdrop-blur-xl rounded-xl border border-white/20 hover:bg-white/20 transition-all duration-200 group\"\n      >\n        <Menu className=\"w-5 h-5 text-white\" />\n        <span className=\"absolute left-full ml-2 top-1/2 transform -translate-y-1/2 bg-black/80 text-white text-sm py-1 px-3 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none whitespace-nowrap\">\n          Back to Dashboard\n        </span>\n      </button>\n\n      <AppLayout \n        project={project || (activeContent ? {\n          id: activeContent.id,\n          keyword: activeContent.keyword,\n          status: activeContent.stage as ProjectStage,\n          created_at: activeContent.created_at,\n          updated_at: activeContent.updated_at\n        } : null)}\n      >\n        <div className=\"max-w-4xl mx-auto\">\n          {error && (\n            <div className=\"mb-6 p-4 bg-red-500/10 backdrop-blur-xl border border-red-500/20 rounded-2xl text-red-400\">\n              {error}\n            </div>\n          )}\n          \n          {activeContent && (\n            <div className=\"mb-6 p-4 bg-white/10 backdrop-blur-xl border border-white/20 rounded-2xl\">\n              <p className=\"text-white/60 text-sm\">Working on:</p>\n              <p className=\"text-white font-semibold\">{activeContent.content_name}</p>\n              <p className=\"text-white/60 text-sm mt-1\">Keyword: {activeContent.keyword}</p>\n            </div>\n          )}\n          \n          {renderCurrentStage()}\n        </div>\n      </AppLayout>\n      \n      <Toaster \n        position=\"bottom-right\"\n        toastOptions={{\n          style: {\n            background: 'rgba(20, 20, 20, 0.9)',\n            color: '#fff',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.1)',\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}