{"ast":null,"code":"class N8nService {\n  constructor() {\n    this.baseUrl = void 0;\n    this.baseUrl = process.env.REACT_APP_N8N_URL || 'http://localhost:5678/webhook';\n  }\n  async makeRequest(endpoint, data) {\n    try {\n      const response = await fetch(`${this.baseUrl}/${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      return {\n        success: true,\n        data: result\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'An unknown error occurred'\n      };\n    }\n  }\n  async generateResearch(keyword, projectId) {\n    return this.makeRequest('research', {\n      keyword,\n      projectId\n    });\n  }\n  async generateBlog(keyword, projectId, researchData) {\n    return this.makeRequest('blog', {\n      keyword,\n      projectId,\n      researchData\n    });\n  }\n  async generatePodcast(keyword, projectId, blogContent) {\n    return this.makeRequest('podcast', {\n      keyword,\n      projectId,\n      blogContent\n    });\n  }\n  async generateAudio(keyword, projectId, podcastScript) {\n    return this.makeRequest('audio', {\n      keyword,\n      projectId,\n      podcastScript\n    });\n  }\n  async generateImages(keyword, projectId, content) {\n    return this.makeRequest('images', {\n      keyword,\n      projectId,\n      content\n    });\n  }\n  async generateSocial(keyword, projectId, content) {\n    return this.makeRequest('social', {\n      keyword,\n      projectId,\n      content\n    });\n  }\n}\nexport const n8nService = new N8nService();","map":{"version":3,"names":["N8nService","constructor","baseUrl","process","env","REACT_APP_N8N_URL","makeRequest","endpoint","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","success","error","message","generateResearch","keyword","projectId","generateBlog","researchData","generatePodcast","blogContent","generateAudio","podcastScript","generateImages","content","generateSocial","n8nService"],"sources":["/Users/will/Content Creation App/src/services/n8n.service.ts"],"sourcesContent":["interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\nclass N8nService {\n  private baseUrl: string;\n\n  constructor() {\n    this.baseUrl = process.env.REACT_APP_N8N_URL || 'http://localhost:5678/webhook';\n  }\n\n  private async makeRequest<T>(endpoint: string, data: any): Promise<ApiResponse<T>> {\n    try {\n      const response = await fetch(`${this.baseUrl}/${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      return {\n        success: true,\n        data: result,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'An unknown error occurred',\n      };\n    }\n  }\n\n  async generateResearch(keyword: string, projectId: string): Promise<ApiResponse> {\n    return this.makeRequest('research', { keyword, projectId });\n  }\n\n  async generateBlog(keyword: string, projectId: string, researchData: any): Promise<ApiResponse> {\n    return this.makeRequest('blog', { keyword, projectId, researchData });\n  }\n\n  async generatePodcast(keyword: string, projectId: string, blogContent: any): Promise<ApiResponse> {\n    return this.makeRequest('podcast', { keyword, projectId, blogContent });\n  }\n\n  async generateAudio(keyword: string, projectId: string, podcastScript: any): Promise<ApiResponse> {\n    return this.makeRequest('audio', { keyword, projectId, podcastScript });\n  }\n\n  async generateImages(keyword: string, projectId: string, content: any): Promise<ApiResponse> {\n    return this.makeRequest('images', { keyword, projectId, content });\n  }\n\n  async generateSocial(keyword: string, projectId: string, content: any): Promise<ApiResponse> {\n    return this.makeRequest('social', { keyword, projectId, content });\n  }\n}\n\nexport const n8nService = new N8nService();"],"mappings":"AAMA,MAAMA,UAAU,CAAC;EAGfC,WAAWA,CAAA,EAAG;IAAA,KAFNC,OAAO;IAGb,IAAI,CAACA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,+BAA+B;EACjF;EAEA,MAAcC,WAAWA,CAAIC,QAAgB,EAAEC,IAAS,EAA2B;IACjF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACR,OAAO,IAAIK,QAAQ,EAAE,EAAE;QAC1DI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpC,OAAO;QACLC,OAAO,EAAE,IAAI;QACbb,IAAI,EAAEW;MACR,CAAC;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,OAAO;QACLD,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEA,KAAK,YAAYL,KAAK,GAAGK,KAAK,CAACC,OAAO,GAAG;MAClD,CAAC;IACH;EACF;EAEA,MAAMC,gBAAgBA,CAACC,OAAe,EAAEC,SAAiB,EAAwB;IAC/E,OAAO,IAAI,CAACpB,WAAW,CAAC,UAAU,EAAE;MAAEmB,OAAO;MAAEC;IAAU,CAAC,CAAC;EAC7D;EAEA,MAAMC,YAAYA,CAACF,OAAe,EAAEC,SAAiB,EAAEE,YAAiB,EAAwB;IAC9F,OAAO,IAAI,CAACtB,WAAW,CAAC,MAAM,EAAE;MAAEmB,OAAO;MAAEC,SAAS;MAAEE;IAAa,CAAC,CAAC;EACvE;EAEA,MAAMC,eAAeA,CAACJ,OAAe,EAAEC,SAAiB,EAAEI,WAAgB,EAAwB;IAChG,OAAO,IAAI,CAACxB,WAAW,CAAC,SAAS,EAAE;MAAEmB,OAAO;MAAEC,SAAS;MAAEI;IAAY,CAAC,CAAC;EACzE;EAEA,MAAMC,aAAaA,CAACN,OAAe,EAAEC,SAAiB,EAAEM,aAAkB,EAAwB;IAChG,OAAO,IAAI,CAAC1B,WAAW,CAAC,OAAO,EAAE;MAAEmB,OAAO;MAAEC,SAAS;MAAEM;IAAc,CAAC,CAAC;EACzE;EAEA,MAAMC,cAAcA,CAACR,OAAe,EAAEC,SAAiB,EAAEQ,OAAY,EAAwB;IAC3F,OAAO,IAAI,CAAC5B,WAAW,CAAC,QAAQ,EAAE;MAAEmB,OAAO;MAAEC,SAAS;MAAEQ;IAAQ,CAAC,CAAC;EACpE;EAEA,MAAMC,cAAcA,CAACV,OAAe,EAAEC,SAAiB,EAAEQ,OAAY,EAAwB;IAC3F,OAAO,IAAI,CAAC5B,WAAW,CAAC,QAAQ,EAAE;MAAEmB,OAAO;MAAEC,SAAS;MAAEQ;IAAQ,CAAC,CAAC;EACpE;AACF;AAEA,OAAO,MAAME,UAAU,GAAG,IAAIpC,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}