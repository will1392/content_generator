{"ast":null,"code":"// services/ai/perplexity.service.ts\nimport axios from 'axios';\nconst PERPLEXITY_API_KEY = process.env.REACT_APP_PERPLEXITY_API_KEY;\nconst PERPLEXITY_API_URL = 'https://api.perplexity.ai/chat/completions';\nexport class PerplexityService {\n  async makeRequest(messages) {\n    try {\n      const response = await axios.post(PERPLEXITY_API_URL, {\n        model: 'sonar-pro',\n        // Updated to Sonar Pro\n        messages,\n        temperature: 0.2,\n        max_tokens: 4000\n      }, {\n        headers: {\n          'Authorization': `Bearer ${PERPLEXITY_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response2$data2;\n      console.error('Perplexity API error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Failed to get research data');\n    }\n  }\n  async generateResearch(keyword) {\n    const systemPrompt = `You are an expert SEO research analyst focused on E-E-A-T (Experience, Expertise, Authoritativeness, Trustworthiness). \n    Your research will be used to create content that ranks well on Google by demonstrating real expertise and authority.\n    Always provide specific, verifiable data with sources. Focus on unique insights that demonstrate deep understanding.`;\n    const userPrompt = `Conduct comprehensive SEO-focused research on \"${keyword}\" following Google's E-E-A-T guidelines.\n\nCRITICAL: This research will prime content creation for maximum SEO impact. Include:\n\n1. SEARCH INTENT ANALYSIS\n   - What are people REALLY looking for when they search \"${keyword}\"?\n   - Identify primary search intent (informational, transactional, navigational, commercial)\n   - List top 5-7 related search queries people use\n   - What questions need to be answered to satisfy search intent?\n\n2. EXPERTISE INDICATORS (E in E-E-A-T)\n   - Technical specifications and requirements\n   - Industry standards and certifications\n   - Professional terminology and correct usage\n   - Common misconceptions to address\n   - Advanced concepts that show deep knowledge\n\n3. EXPERIENCE EVIDENCE (E in E-E-A-T)\n   - Real-world case studies with specific outcomes\n   - First-hand accounts and testimonials\n   - Practical implementation examples\n   - Before/after scenarios with metrics\n   - Common pitfalls from actual experience\n\n4. AUTHORITATIVE DATA (A in E-E-A-T)\n   - Statistics from authoritative sources (name the sources)\n   - Industry leader quotes and positions\n   - Government or educational institution data\n   - Recent studies and research papers\n   - Market leader strategies and approaches\n\n5. TRUST SIGNALS (T in E-E-A-T)\n   - Regulatory compliance requirements\n   - Safety considerations\n   - Industry best practices\n   - Ethical considerations\n   - Transparency factors\n\n6. COMPETITIVE LANDSCAPE FOR SEO\n   - What are the top 3 ranking pages covering?\n   - What unique angles are they missing?\n   - What expertise gaps exist in current content?\n   - What questions aren't being answered well?\n\n7. SEMANTIC SEO ELEMENTS\n   - LSI (Latent Semantic Indexing) keywords\n   - Entity relationships\n   - Topic clusters and related concepts\n   - Natural language variations\n\n8. USER ENGAGEMENT FACTORS\n   - What keeps people reading/watching?\n   - Interactive elements that work\n   - Visual data that enhances understanding\n   - Comparison points users care about\n\n9. FEATURED SNIPPET OPPORTUNITIES\n   - Questions that could trigger featured snippets\n   - List-based information for list snippets\n   - Step-by-step processes for how-to snippets\n   - Definitions for paragraph snippets\n\n10. CONTENT DEPTH INDICATORS\n    - Subtopics that MUST be covered for completeness\n    - Depth markers Google's algorithms look for\n    - Unique insights not found elsewhere\n    - Original research angles\n\nFormat as JSON with these exact keys:\n{\n  \"searchIntent\": {\n    \"primary\": \"informational/transactional/navigational/commercial\",\n    \"userGoals\": [\"goal1\", \"goal2\"],\n    \"relatedQueries\": [\"query1\", \"query2\"],\n    \"questionsToAnswer\": [\"question1\", \"question2\"]\n  },\n  \"definition\": \"Comprehensive E-E-A-T focused definition\",\n  \"overview\": \"Detailed overview demonstrating expertise\",\n  \"expertiseIndicators\": {\n    \"technicalSpecs\": [\"spec1\", \"spec2\"],\n    \"industryStandards\": [\"standard1\", \"standard2\"],\n    \"terminology\": [{\"term\": \"definition\"}],\n    \"misconceptions\": [{\"misconception\": \"truth\"}]\n  },\n  \"experienceEvidence\": [\n    {\n      \"type\": \"case study\",\n      \"description\": \"specific example\",\n      \"outcome\": \"measurable result\",\n      \"source\": \"credible source\"\n    }\n  ],\n  \"authoritativeData\": [\n    {\n      \"metric\": \"specific metric\",\n      \"value\": \"specific value\",\n      \"source\": \"authoritative source name\",\n      \"year\": \"2024\",\n      \"url\": \"source url if available\"\n    }\n  ],\n  \"trustSignals\": {\n    \"regulations\": [\"regulation1\", \"regulation2\"],\n    \"bestPractices\": [\"practice1\", \"practice2\"],\n    \"safetyConsiderations\": [\"consideration1\", \"consideration2\"]\n  },\n  \"competitiveLandscape\": {\n    \"topRankingContent\": [\"what top pages cover\"],\n    \"contentGaps\": [\"what they miss\"],\n    \"uniqueAngles\": [\"opportunities for differentiation\"]\n  },\n  \"semanticSEO\": {\n    \"lsiKeywords\": [\"keyword1\", \"keyword2\"],\n    \"entities\": [\"entity1\", \"entity2\"],\n    \"topicClusters\": [\"cluster1\", \"cluster2\"]\n  },\n  \"featuredSnippetOpps\": [\n    {\n      \"question\": \"specific question\",\n      \"optimalAnswer\": \"concise answer for snippet\"\n    }\n  ],\n  \"contentDepthRequirements\": {\n    \"mustCoverTopics\": [\"topic1\", \"topic2\"],\n    \"uniqueInsights\": [\"insight1\", \"insight2\"],\n    \"originalAngles\": [\"angle1\", \"angle2\"]\n  },\n  \"currentTrends\": [\"trend with specific data\"],\n  \"statistics\": [\"8-10 specific, sourced statistics\"],\n  \"commonQuestions\": [{\"question\": \"answer demonstrating expertise\"}],\n  \"relatedTopics\": [\"topic1\", \"topic2\"],\n  \"applications\": [\"application1\", \"application2\"],\n  \"futureOutlook\": \"E-E-A-T focused future analysis\",\n  \"challenges\": [\"challenge1\", \"challenge2\"],\n  \"opportunities\": [\"opportunity1\", \"opportunity2\"]\n}\n\nIMPORTANT: Every piece of data should help establish E-E-A-T and give specific angles for ranking content.`;\n    const messages = [{\n      role: 'system',\n      content: systemPrompt\n    }, {\n      role: 'user',\n      content: userPrompt\n    }];\n    const response = await this.makeRequest(messages);\n    try {\n      const researchData = JSON.parse(response);\n      return researchData;\n    } catch (parseError) {\n      console.error('Failed to parse research response:', parseError);\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      if (jsonMatch) {\n        return JSON.parse(jsonMatch[0]);\n      }\n      throw new Error('Failed to parse research data');\n    }\n  }\n}\nexport const perplexityService = new PerplexityService();","map":{"version":3,"names":["axios","PERPLEXITY_API_KEY","process","env","REACT_APP_PERPLEXITY_API_KEY","PERPLEXITY_API_URL","PerplexityService","makeRequest","messages","response","post","model","temperature","max_tokens","headers","data","choices","message","content","error","_error$response","_error$response2","_error$response2$data","_error$response2$data2","console","Error","generateResearch","keyword","systemPrompt","userPrompt","role","researchData","JSON","parse","parseError","jsonMatch","match","perplexityService"],"sources":["/Users/will/Content Creation App/src/services/ai/perplexity.service.ts"],"sourcesContent":["// services/ai/perplexity.service.ts\nimport axios from 'axios';\nimport { ResearchContent } from '../../types/project.types';\n\nconst PERPLEXITY_API_KEY = process.env.REACT_APP_PERPLEXITY_API_KEY;\nconst PERPLEXITY_API_URL = 'https://api.perplexity.ai/chat/completions';\n\ninterface PerplexityResponse {\n  id: string;\n  model: string;\n  choices: Array<{\n    message: {\n      role: string;\n      content: string;\n    };\n    finish_reason: string;\n  }>;\n}\n\nexport class PerplexityService {\n  private async makeRequest(messages: any[]): Promise<string> {\n    try {\n      const response = await axios.post<PerplexityResponse>(\n        PERPLEXITY_API_URL,\n        {\n          model: 'sonar-pro',  // Updated to Sonar Pro\n          messages,\n          temperature: 0.2,\n          max_tokens: 4000,\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${PERPLEXITY_API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      return response.data.choices[0].message.content;\n    } catch (error: any) {\n      console.error('Perplexity API error:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.error?.message || 'Failed to get research data');\n    }\n  }\n\n  async generateResearch(keyword: string): Promise<ResearchContent> {\n    const systemPrompt = `You are an expert SEO research analyst focused on E-E-A-T (Experience, Expertise, Authoritativeness, Trustworthiness). \n    Your research will be used to create content that ranks well on Google by demonstrating real expertise and authority.\n    Always provide specific, verifiable data with sources. Focus on unique insights that demonstrate deep understanding.`;\n\n    const userPrompt = `Conduct comprehensive SEO-focused research on \"${keyword}\" following Google's E-E-A-T guidelines.\n\nCRITICAL: This research will prime content creation for maximum SEO impact. Include:\n\n1. SEARCH INTENT ANALYSIS\n   - What are people REALLY looking for when they search \"${keyword}\"?\n   - Identify primary search intent (informational, transactional, navigational, commercial)\n   - List top 5-7 related search queries people use\n   - What questions need to be answered to satisfy search intent?\n\n2. EXPERTISE INDICATORS (E in E-E-A-T)\n   - Technical specifications and requirements\n   - Industry standards and certifications\n   - Professional terminology and correct usage\n   - Common misconceptions to address\n   - Advanced concepts that show deep knowledge\n\n3. EXPERIENCE EVIDENCE (E in E-E-A-T)\n   - Real-world case studies with specific outcomes\n   - First-hand accounts and testimonials\n   - Practical implementation examples\n   - Before/after scenarios with metrics\n   - Common pitfalls from actual experience\n\n4. AUTHORITATIVE DATA (A in E-E-A-T)\n   - Statistics from authoritative sources (name the sources)\n   - Industry leader quotes and positions\n   - Government or educational institution data\n   - Recent studies and research papers\n   - Market leader strategies and approaches\n\n5. TRUST SIGNALS (T in E-E-A-T)\n   - Regulatory compliance requirements\n   - Safety considerations\n   - Industry best practices\n   - Ethical considerations\n   - Transparency factors\n\n6. COMPETITIVE LANDSCAPE FOR SEO\n   - What are the top 3 ranking pages covering?\n   - What unique angles are they missing?\n   - What expertise gaps exist in current content?\n   - What questions aren't being answered well?\n\n7. SEMANTIC SEO ELEMENTS\n   - LSI (Latent Semantic Indexing) keywords\n   - Entity relationships\n   - Topic clusters and related concepts\n   - Natural language variations\n\n8. USER ENGAGEMENT FACTORS\n   - What keeps people reading/watching?\n   - Interactive elements that work\n   - Visual data that enhances understanding\n   - Comparison points users care about\n\n9. FEATURED SNIPPET OPPORTUNITIES\n   - Questions that could trigger featured snippets\n   - List-based information for list snippets\n   - Step-by-step processes for how-to snippets\n   - Definitions for paragraph snippets\n\n10. CONTENT DEPTH INDICATORS\n    - Subtopics that MUST be covered for completeness\n    - Depth markers Google's algorithms look for\n    - Unique insights not found elsewhere\n    - Original research angles\n\nFormat as JSON with these exact keys:\n{\n  \"searchIntent\": {\n    \"primary\": \"informational/transactional/navigational/commercial\",\n    \"userGoals\": [\"goal1\", \"goal2\"],\n    \"relatedQueries\": [\"query1\", \"query2\"],\n    \"questionsToAnswer\": [\"question1\", \"question2\"]\n  },\n  \"definition\": \"Comprehensive E-E-A-T focused definition\",\n  \"overview\": \"Detailed overview demonstrating expertise\",\n  \"expertiseIndicators\": {\n    \"technicalSpecs\": [\"spec1\", \"spec2\"],\n    \"industryStandards\": [\"standard1\", \"standard2\"],\n    \"terminology\": [{\"term\": \"definition\"}],\n    \"misconceptions\": [{\"misconception\": \"truth\"}]\n  },\n  \"experienceEvidence\": [\n    {\n      \"type\": \"case study\",\n      \"description\": \"specific example\",\n      \"outcome\": \"measurable result\",\n      \"source\": \"credible source\"\n    }\n  ],\n  \"authoritativeData\": [\n    {\n      \"metric\": \"specific metric\",\n      \"value\": \"specific value\",\n      \"source\": \"authoritative source name\",\n      \"year\": \"2024\",\n      \"url\": \"source url if available\"\n    }\n  ],\n  \"trustSignals\": {\n    \"regulations\": [\"regulation1\", \"regulation2\"],\n    \"bestPractices\": [\"practice1\", \"practice2\"],\n    \"safetyConsiderations\": [\"consideration1\", \"consideration2\"]\n  },\n  \"competitiveLandscape\": {\n    \"topRankingContent\": [\"what top pages cover\"],\n    \"contentGaps\": [\"what they miss\"],\n    \"uniqueAngles\": [\"opportunities for differentiation\"]\n  },\n  \"semanticSEO\": {\n    \"lsiKeywords\": [\"keyword1\", \"keyword2\"],\n    \"entities\": [\"entity1\", \"entity2\"],\n    \"topicClusters\": [\"cluster1\", \"cluster2\"]\n  },\n  \"featuredSnippetOpps\": [\n    {\n      \"question\": \"specific question\",\n      \"optimalAnswer\": \"concise answer for snippet\"\n    }\n  ],\n  \"contentDepthRequirements\": {\n    \"mustCoverTopics\": [\"topic1\", \"topic2\"],\n    \"uniqueInsights\": [\"insight1\", \"insight2\"],\n    \"originalAngles\": [\"angle1\", \"angle2\"]\n  },\n  \"currentTrends\": [\"trend with specific data\"],\n  \"statistics\": [\"8-10 specific, sourced statistics\"],\n  \"commonQuestions\": [{\"question\": \"answer demonstrating expertise\"}],\n  \"relatedTopics\": [\"topic1\", \"topic2\"],\n  \"applications\": [\"application1\", \"application2\"],\n  \"futureOutlook\": \"E-E-A-T focused future analysis\",\n  \"challenges\": [\"challenge1\", \"challenge2\"],\n  \"opportunities\": [\"opportunity1\", \"opportunity2\"]\n}\n\nIMPORTANT: Every piece of data should help establish E-E-A-T and give specific angles for ranking content.`;\n\n    const messages = [\n      { role: 'system', content: systemPrompt },\n      { role: 'user', content: userPrompt }\n    ];\n\n    const response = await this.makeRequest(messages);\n    \n    try {\n      const researchData = JSON.parse(response);\n      return researchData as ResearchContent;\n    } catch (parseError) {\n      console.error('Failed to parse research response:', parseError);\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      if (jsonMatch) {\n        return JSON.parse(jsonMatch[0]) as ResearchContent;\n      }\n      throw new Error('Failed to parse research data');\n    }\n  }\n}\n\nexport const perplexityService = new PerplexityService();"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,4BAA4B;AACnE,MAAMC,kBAAkB,GAAG,4CAA4C;AAcvE,OAAO,MAAMC,iBAAiB,CAAC;EAC7B,MAAcC,WAAWA,CAACC,QAAe,EAAmB;IAC1D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/BL,kBAAkB,EAClB;QACEM,KAAK,EAAE,WAAW;QAAG;QACrBH,QAAQ;QACRI,WAAW,EAAE,GAAG;QAChBC,UAAU,EAAE;MACd,CAAC,EACD;QACEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUb,kBAAkB,EAAE;UAC/C,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,OAAOQ,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,OAAO;IACjD,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACnBC,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACV,QAAQ,cAAAW,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACF,OAAO,CAAC;MAC7E,MAAM,IAAIQ,KAAK,CAAC,EAAAJ,gBAAA,GAAAF,KAAK,CAACV,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBH,KAAK,cAAAI,sBAAA,uBAA3BA,sBAAA,CAA6BN,OAAO,KAAI,6BAA6B,CAAC;IACxF;EACF;EAEA,MAAMS,gBAAgBA,CAACC,OAAe,EAA4B;IAChE,MAAMC,YAAY,GAAG;AACzB;AACA,yHAAyH;IAErH,MAAMC,UAAU,GAAG,kDAAkDF,OAAO;AAChF;AACA;AACA;AACA;AACA,4DAA4DA,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;IAEvG,MAAMnB,QAAQ,GAAG,CACf;MAAEsB,IAAI,EAAE,QAAQ;MAAEZ,OAAO,EAAEU;IAAa,CAAC,EACzC;MAAEE,IAAI,EAAE,MAAM;MAAEZ,OAAO,EAAEW;IAAW,CAAC,CACtC;IAED,MAAMpB,QAAQ,GAAG,MAAM,IAAI,CAACF,WAAW,CAACC,QAAQ,CAAC;IAEjD,IAAI;MACF,MAAMuB,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACxB,QAAQ,CAAC;MACzC,OAAOsB,YAAY;IACrB,CAAC,CAAC,OAAOG,UAAU,EAAE;MACnBV,OAAO,CAACL,KAAK,CAAC,oCAAoC,EAAEe,UAAU,CAAC;MAC/D,MAAMC,SAAS,GAAG1B,QAAQ,CAAC2B,KAAK,CAAC,aAAa,CAAC;MAC/C,IAAID,SAAS,EAAE;QACb,OAAOH,IAAI,CAACC,KAAK,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;MACjC;MACA,MAAM,IAAIV,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACF;AACF;AAEA,OAAO,MAAMY,iBAAiB,GAAG,IAAI/B,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}